name: Publish to Cargo

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  publish:
    name: Publish to crates.io
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Install Nix
      uses: cachix/install-nix-action@v27
      with:
        nix_path: nixpkgs=channel:nixos-unstable
        extra_nix_config: |
          experimental-features = nix-command flakes
          accept-flake-config = true
          substituters = https://cache.garnix.io https://cache.nixos.org/
          trusted-public-keys = cache.garnix.io:CTFPyKSLcx5RMJKfLo5EEPUObbA78b0YQ2DTCJXqc40= cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY=
        
    - name: Run tests
      run: nix flake check
      
    - name: Build package
      run: nix build .#default
      
    - name: Publish to crates.io
      if: startsWith(github.ref, 'refs/tags/v')
      run: |
        echo "ðŸš€ Publishing garnix-insights to crates.io..."
        nix develop -c -- cargo publish --allow-dirty
      env:
        CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        
    - name: Create GitHub Release
      if: startsWith(github.ref, 'refs/tags/v')
      uses: softprops/action-gh-release@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        name: garnix-insights ${{ github.ref_name }}
        body: |
          ## garnix-insights ${{ github.ref_name }}
          
          CI/CD insights for Garnix.io - CLI tool, HTTP server, and MCP server for build analysis.
          
          ### Installation
          
          ```bash
          cargo install garnix-insights
          ```
          
          Or with Nix:
          
          ```bash
          nix profile install github:shift/garnix-insights
          ```
          
          ### Usage Modes
          - **CLI**: Direct build status checking
          - **HTTP Server**: REST API for integration  
          - **MCP Server**: Model Context Protocol support
          
          ### Documentation
          - [README.md](https://github.com/shift/garnix-insights/blob/main/README.md)
          - [MCP Configuration](https://github.com/shift/garnix-insights/blob/main/MCP-CONFIGURATION.md)
        draft: false
        prerelease: false
        generate_release_notes: true